package one.transfinite.naac.user;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertSame;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;

import one.transfinite.naac.student.AdmittedStudent;
import one.transfinite.naac.course.Course;
import one.transfinite.naac.department.Department;
import one.transfinite.naac.program.Program;
import one.transfinite.naac.hod.Hod;
import one.transfinite.naac.qualification.EntranceQualification;
import one.transfinite.naac.qualification.PGQualification;
import one.transfinite.naac.qualification.ResearchQualification;
import one.transfinite.naac.qualification.UGQualification;
import one.transfinite.naac.role.Role;
import one.transfinite.naac.role.RoleName;
import one.transfinite.naac.student.Student;
import one.transfinite.naac.publication.BookPublication;
import one.transfinite.naac.program.FacultyProgram;
import one.transfinite.naac.program.FacultySeminar;
import one.transfinite.naac.publication.PaperPresented;
import one.transfinite.naac.publication.ResearchPublication;
import one.transfinite.naac.teacher.Teacher;
import one.transfinite.naac.teacher.TeacherAppointment;
import one.transfinite.naac.teacher.TeacherApproval;
import one.transfinite.naac.teacher.TeacherTransfer;
import org.junit.jupiter.api.Test;

class UserTest {
    @Test
    void testConstructor() {
        User actualUser = new User();
        LocalDateTime atStartOfDayResult = LocalDate.of(1970, 1, 1).atStartOfDay();
        Date fromResult = Date.from(atStartOfDayResult.atZone(ZoneId.of("UTC")).toInstant());
        actualUser.setCreatedAt(fromResult);
        LocalDateTime atStartOfDayResult1 = LocalDate.of(1970, 1, 1).atStartOfDay();
        Date fromResult1 = Date.from(atStartOfDayResult1.atZone(ZoneId.of("UTC")).toInstant());
        actualUser.setDob(fromResult1);
        actualUser.setEmail("jane.doe@example.org");
        actualUser.setFirstName("Jane");
        actualUser.setGender("Gender");
        ResearchQualification researchQualification = new ResearchQualification();
        researchQualification.setSubject("Hello from the Dreaming Spires");
        researchQualification.setUniversity("University");
        researchQualification.setId(123L);
        researchQualification.setDegree("Degree");
        LocalDateTime atStartOfDayResult2 = LocalDate.of(1970, 1, 1).atStartOfDay();
        researchQualification.setDateOfDeclaration(Date.from(atStartOfDayResult2.atZone(ZoneId.of("UTC")).toInstant()));
        ResearchQualification researchQualification1 = new ResearchQualification();
        researchQualification1.setSubject("Hello from the Dreaming Spires");
        researchQualification1.setUniversity("University");
        researchQualification1.setId(123L);
        researchQualification1.setDegree("Degree");
        LocalDateTime atStartOfDayResult3 = LocalDate.of(1970, 1, 1).atStartOfDay();
        researchQualification1.setDateOfDeclaration(Date.from(atStartOfDayResult3.atZone(ZoneId.of("UTC")).toInstant()));
        User user = new User();
        user.setLastName("Doe");
        user.setEmail("jane.doe@example.org");
        user.setPassword("password");
        user.setHod(new Hod());
        user.setRole(new Role());
        user.setUserId(123L);
        LocalDateTime atStartOfDayResult4 = LocalDate.of(1970, 1, 1).atStartOfDay();
        user.setCreatedAt(Date.from(atStartOfDayResult4.atZone(ZoneId.of("UTC")).toInstant()));
        user.setMiddleName("Middle Name");
        user.setFirstName("Jane");
        LocalDateTime atStartOfDayResult5 = LocalDate.of(1970, 1, 1).atStartOfDay();
        user.setDob(Date.from(atStartOfDayResult5.atZone(ZoneId.of("UTC")).toInstant()));
        user.setTeacher(new Teacher());
        user.setGender("Gender");
        user.setStudent(new Student());
        user.setPhone("4105551212");
        EntranceQualification entranceQualification = new EntranceQualification();
        entranceQualification.setSubject("Hello from the Dreaming Spires");
        entranceQualification.setUniversity("University");
        entranceQualification.setId(123L);
        entranceQualification.setName("Name");
        LocalDateTime atStartOfDayResult6 = LocalDate.of(1970, 1, 1).atStartOfDay();
        entranceQualification.setYearOfPassing(Date.from(atStartOfDayResult6.atZone(ZoneId.of("UTC")).toInstant()));
        UGQualification ugQualification = new UGQualification();
        ugQualification.setDocument("Document");
        ugQualification.setUniversity("University");
        ugQualification.setSpecialization("Specialization");
        ugQualification.setId(123L);
        ugQualification.setDegree("Degree");
        ugQualification.setGrade("Grade");
        LocalDateTime atStartOfDayResult7 = LocalDate.of(1970, 1, 1).atStartOfDay();
        ugQualification.setYearOfPassing(Date.from(atStartOfDayResult7.atZone(ZoneId.of("UTC")).toInstant()));
        PGQualification pgQualification = new PGQualification();
        pgQualification.setDocument("Document");
        pgQualification.setUniversity("University");
        pgQualification.setSpecialization("Specialization");
        pgQualification.setId(123L);
        pgQualification.setDegree("Degree");
        pgQualification.setGrade("Grade");
        LocalDateTime atStartOfDayResult8 = LocalDate.of(1970, 1, 1).atStartOfDay();
        pgQualification.setYearOfPassing(Date.from(atStartOfDayResult8.atZone(ZoneId.of("UTC")).toInstant()));
        Hod hod = new Hod();
        hod.setResearchQualification(researchQualification1);
        hod.setUser(user);
        hod.setTeacherApprovals(new ArrayList<TeacherApproval>());
        hod.setEntranceQualification(entranceQualification);
        hod.setPanDocument("Pan Document");
        hod.setTeacherTransfers(new ArrayList<TeacherTransfer>());
        hod.setBookPublications(new ArrayList<BookPublication>());
        hod.setResearchPublications(new ArrayList<ResearchPublication>());
        hod.setPaperPresentedList(new ArrayList<PaperPresented>());
        hod.setAadharDocument("Aadhar Document");
        hod.setTeacherAppointments(new ArrayList<TeacherAppointment>());
        hod.setId(123L);
        hod.setUgQualification(ugQualification);
        hod.setPanNumber("42");
        hod.setAadharNumber("42");
        hod.setPgQualification(pgQualification);
        Role role = new Role();
        role.setRoleName(RoleName.Admin);
        role.setId(123L);
        ResearchQualification researchQualification2 = new ResearchQualification();
        researchQualification2.setSubject("Hello from the Dreaming Spires");
        researchQualification2.setUniversity("University");
        researchQualification2.setId(123L);
        researchQualification2.setDegree("Degree");
        LocalDateTime atStartOfDayResult9 = LocalDate.of(1970, 1, 1).atStartOfDay();
        researchQualification2.setDateOfDeclaration(Date.from(atStartOfDayResult9.atZone(ZoneId.of("UTC")).toInstant()));
        User user1 = new User();
        user1.setLastName("Doe");
        user1.setEmail("jane.doe@example.org");
        user1.setPassword("password");
        user1.setHod(new Hod());
        user1.setRole(new Role());
        user1.setUserId(123L);
        LocalDateTime atStartOfDayResult10 = LocalDate.of(1970, 1, 1).atStartOfDay();
        user1.setCreatedAt(Date.from(atStartOfDayResult10.atZone(ZoneId.of("UTC")).toInstant()));
        user1.setMiddleName("Middle Name");
        user1.setFirstName("Jane");
        LocalDateTime atStartOfDayResult11 = LocalDate.of(1970, 1, 1).atStartOfDay();
        user1.setDob(Date.from(atStartOfDayResult11.atZone(ZoneId.of("UTC")).toInstant()));
        user1.setTeacher(new Teacher());
        user1.setGender("Gender");
        user1.setStudent(new Student());
        user1.setPhone("4105551212");
        EntranceQualification entranceQualification1 = new EntranceQualification();
        entranceQualification1.setSubject("Hello from the Dreaming Spires");
        entranceQualification1.setUniversity("University");
        entranceQualification1.setId(123L);
        entranceQualification1.setName("Name");
        LocalDateTime atStartOfDayResult12 = LocalDate.of(1970, 1, 1).atStartOfDay();
        entranceQualification1.setYearOfPassing(Date.from(atStartOfDayResult12.atZone(ZoneId.of("UTC")).toInstant()));
        UGQualification ugQualification1 = new UGQualification();
        ugQualification1.setDocument("Document");
        ugQualification1.setUniversity("University");
        ugQualification1.setSpecialization("Specialization");
        ugQualification1.setId(123L);
        ugQualification1.setDegree("Degree");
        ugQualification1.setGrade("Grade");
        LocalDateTime atStartOfDayResult13 = LocalDate.of(1970, 1, 1).atStartOfDay();
        ugQualification1.setYearOfPassing(Date.from(atStartOfDayResult13.atZone(ZoneId.of("UTC")).toInstant()));
        PGQualification pgQualification1 = new PGQualification();
        pgQualification1.setDocument("Document");
        pgQualification1.setUniversity("University");
        pgQualification1.setSpecialization("Specialization");
        pgQualification1.setId(123L);
        pgQualification1.setDegree("Degree");
        pgQualification1.setGrade("Grade");
        LocalDateTime atStartOfDayResult14 = LocalDate.of(1970, 1, 1).atStartOfDay();
        pgQualification1.setYearOfPassing(Date.from(atStartOfDayResult14.atZone(ZoneId.of("UTC")).toInstant()));
        Teacher teacher = new Teacher();
        teacher.setResearchQualification(researchQualification2);
        teacher.setFacultyPrograms(new ArrayList<FacultyProgram>());
        teacher.setUser(user1);
        teacher.setTeacherApprovals(new ArrayList<TeacherApproval>());
        teacher.setEntranceQualification(entranceQualification1);
        teacher.setPanDocument("Pan Document");
        teacher.setTeacherTransfers(new ArrayList<TeacherTransfer>());
        teacher.setBookPublications(new ArrayList<BookPublication>());
        teacher.setResearchPublications(new ArrayList<ResearchPublication>());
        teacher.setTeacherId(123L);
        teacher.setPaperPresentedList(new ArrayList<PaperPresented>());
        teacher.setAadharDocument("Aadhar Document");
        teacher.setTeacherAppointments(new ArrayList<TeacherAppointment>());
        teacher.setUgQualification(ugQualification1);
        teacher.setPanNumber("42");
        teacher.setAadharNumber("42");
        teacher.setFacultySeminars(new ArrayList<FacultySeminar>());
        teacher.setPgQualification(pgQualification1);
        User user2 = new User();
        user2.setLastName("Doe");
        user2.setEmail("jane.doe@example.org");
        user2.setPassword("password");
        user2.setHod(new Hod());
        user2.setRole(new Role());
        user2.setUserId(123L);
        LocalDateTime atStartOfDayResult15 = LocalDate.of(1970, 1, 1).atStartOfDay();
        user2.setCreatedAt(Date.from(atStartOfDayResult15.atZone(ZoneId.of("UTC")).toInstant()));
        user2.setMiddleName("Middle Name");
        user2.setFirstName("Jane");
        LocalDateTime atStartOfDayResult16 = LocalDate.of(1970, 1, 1).atStartOfDay();
        user2.setDob(Date.from(atStartOfDayResult16.atZone(ZoneId.of("UTC")).toInstant()));
        user2.setTeacher(new Teacher());
        user2.setGender("Gender");
        user2.setStudent(new Student());
        user2.setPhone("4105551212");
        Program program = new Program();
        program.setProgramCode("Program Code");
        program.setProgramName("Program Name");
        program.setCourses(new ArrayList<Course>());
        program.setProgramId(123L);
        program.setStartYear("Start Year");
        program.setAdmittedStudents(new ArrayList<AdmittedStudent>());
        program.setDepartment(new Department());
        program.setProgramType("Program Type");
        Student student = new Student();
        student.setFatherName("Father Name");
        student.setReligion("Religion");
        student.setUser(user2);
        student.setPanDocument("Pan Document");
        student.setTenthMarks(10.0);
        student.setTwelthMarks(10.0);
        student.setStudentId(123L);
        student.setMotherName("Mother Name");
        student.setFatherPhoneNumber("4105551212");
        LocalDateTime atStartOfDayResult17 = LocalDate.of(1970, 1, 1).atStartOfDay();
        student.setStartDate(Date.from(atStartOfDayResult17.atZone(ZoneId.of("UTC")).toInstant()));
        student.setProgram(program);
        student.setAadharDocument("Aadhar Document");
        student.setPanNumber("42");
        student.setAadharNumber("42");
        LocalDateTime atStartOfDayResult18 = LocalDate.of(1970, 1, 1).atStartOfDay();
        student.setCompletionDate(Date.from(atStartOfDayResult18.atZone(ZoneId.of("UTC")).toInstant()));
        student.setMotherPhoneNumber("4105551212");
        student.setCast("Cast");
        User user3 = new User();
        user3.setLastName("Doe");
        user3.setEmail("jane.doe@example.org");
        user3.setPassword("password");
        user3.setHod(hod);
        user3.setRole(role);
        user3.setUserId(123L);
        LocalDateTime atStartOfDayResult19 = LocalDate.of(1970, 1, 1).atStartOfDay();
        user3.setCreatedAt(Date.from(atStartOfDayResult19.atZone(ZoneId.of("UTC")).toInstant()));
        user3.setMiddleName("Middle Name");
        user3.setFirstName("Jane");
        LocalDateTime atStartOfDayResult20 = LocalDate.of(1970, 1, 1).atStartOfDay();
        user3.setDob(Date.from(atStartOfDayResult20.atZone(ZoneId.of("UTC")).toInstant()));
        user3.setTeacher(teacher);
        user3.setGender("Gender");
        user3.setStudent(student);
        user3.setPhone("4105551212");
        EntranceQualification entranceQualification2 = new EntranceQualification();
        entranceQualification2.setSubject("Hello from the Dreaming Spires");
        entranceQualification2.setUniversity("University");
        entranceQualification2.setId(123L);
        entranceQualification2.setName("Name");
        LocalDateTime atStartOfDayResult21 = LocalDate.of(1970, 1, 1).atStartOfDay();
        entranceQualification2.setYearOfPassing(Date.from(atStartOfDayResult21.atZone(ZoneId.of("UTC")).toInstant()));
        UGQualification ugQualification2 = new UGQualification();
        ugQualification2.setDocument("Document");
        ugQualification2.setUniversity("University");
        ugQualification2.setSpecialization("Specialization");
        ugQualification2.setId(123L);
        ugQualification2.setDegree("Degree");
        ugQualification2.setGrade("Grade");
        LocalDateTime atStartOfDayResult22 = LocalDate.of(1970, 1, 1).atStartOfDay();
        ugQualification2.setYearOfPassing(Date.from(atStartOfDayResult22.atZone(ZoneId.of("UTC")).toInstant()));
        PGQualification pgQualification2 = new PGQualification();
        pgQualification2.setDocument("Document");
        pgQualification2.setUniversity("University");
        pgQualification2.setSpecialization("Specialization");
        pgQualification2.setId(123L);
        pgQualification2.setDegree("Degree");
        pgQualification2.setGrade("Grade");
        LocalDateTime atStartOfDayResult23 = LocalDate.of(1970, 1, 1).atStartOfDay();
        pgQualification2.setYearOfPassing(Date.from(atStartOfDayResult23.atZone(ZoneId.of("UTC")).toInstant()));
        Hod hod1 = new Hod();
        hod1.setResearchQualification(researchQualification);
        hod1.setUser(user3);
        hod1.setTeacherApprovals(new ArrayList<TeacherApproval>());
        hod1.setEntranceQualification(entranceQualification2);
        hod1.setPanDocument("Pan Document");
        hod1.setTeacherTransfers(new ArrayList<TeacherTransfer>());
        hod1.setBookPublications(new ArrayList<BookPublication>());
        hod1.setResearchPublications(new ArrayList<ResearchPublication>());
        hod1.setPaperPresentedList(new ArrayList<PaperPresented>());
        hod1.setAadharDocument("Aadhar Document");
        hod1.setTeacherAppointments(new ArrayList<TeacherAppointment>());
        hod1.setId(123L);
        hod1.setUgQualification(ugQualification2);
        hod1.setPanNumber("42");
        hod1.setAadharNumber("42");
        hod1.setPgQualification(pgQualification2);
        actualUser.setHod(hod1);
        actualUser.setLastName("Doe");
        actualUser.setMiddleName("Middle Name");
        actualUser.setPassword("password");
        actualUser.setPhone("4105551212");
        Role role1 = new Role();
        role1.setRoleName(RoleName.Admin);
        role1.setId(123L);
        actualUser.setRole(role1);
        ResearchQualification researchQualification3 = new ResearchQualification();
        researchQualification3.setSubject("Hello from the Dreaming Spires");
        researchQualification3.setUniversity("University");
        researchQualification3.setId(123L);
        researchQualification3.setDegree("Degree");
        LocalDateTime atStartOfDayResult24 = LocalDate.of(1970, 1, 1).atStartOfDay();
        researchQualification3.setDateOfDeclaration(Date.from(atStartOfDayResult24.atZone(ZoneId.of("UTC")).toInstant()));
        User user4 = new User();
        user4.setLastName("Doe");
        user4.setEmail("jane.doe@example.org");
        user4.setPassword("password");
        user4.setHod(new Hod());
        user4.setRole(new Role());
        user4.setUserId(123L);
        LocalDateTime atStartOfDayResult25 = LocalDate.of(1970, 1, 1).atStartOfDay();
        user4.setCreatedAt(Date.from(atStartOfDayResult25.atZone(ZoneId.of("UTC")).toInstant()));
        user4.setMiddleName("Middle Name");
        user4.setFirstName("Jane");
        LocalDateTime atStartOfDayResult26 = LocalDate.of(1970, 1, 1).atStartOfDay();
        user4.setDob(Date.from(atStartOfDayResult26.atZone(ZoneId.of("UTC")).toInstant()));
        user4.setTeacher(new Teacher());
        user4.setGender("Gender");
        user4.setStudent(new Student());
        user4.setPhone("4105551212");
        EntranceQualification entranceQualification3 = new EntranceQualification();
        entranceQualification3.setSubject("Hello from the Dreaming Spires");
        entranceQualification3.setUniversity("University");
        entranceQualification3.setId(123L);
        entranceQualification3.setName("Name");
        LocalDateTime atStartOfDayResult27 = LocalDate.of(1970, 1, 1).atStartOfDay();
        entranceQualification3.setYearOfPassing(Date.from(atStartOfDayResult27.atZone(ZoneId.of("UTC")).toInstant()));
        UGQualification ugQualification3 = new UGQualification();
        ugQualification3.setDocument("Document");
        ugQualification3.setUniversity("University");
        ugQualification3.setSpecialization("Specialization");
        ugQualification3.setId(123L);
        ugQualification3.setDegree("Degree");
        ugQualification3.setGrade("Grade");
        LocalDateTime atStartOfDayResult28 = LocalDate.of(1970, 1, 1).atStartOfDay();
        ugQualification3.setYearOfPassing(Date.from(atStartOfDayResult28.atZone(ZoneId.of("UTC")).toInstant()));
        PGQualification pgQualification3 = new PGQualification();
        pgQualification3.setDocument("Document");
        pgQualification3.setUniversity("University");
        pgQualification3.setSpecialization("Specialization");
        pgQualification3.setId(123L);
        pgQualification3.setDegree("Degree");
        pgQualification3.setGrade("Grade");
        LocalDateTime atStartOfDayResult29 = LocalDate.of(1970, 1, 1).atStartOfDay();
        pgQualification3.setYearOfPassing(Date.from(atStartOfDayResult29.atZone(ZoneId.of("UTC")).toInstant()));
        Hod hod2 = new Hod();
        hod2.setResearchQualification(researchQualification3);
        hod2.setUser(user4);
        hod2.setTeacherApprovals(new ArrayList<TeacherApproval>());
        hod2.setEntranceQualification(entranceQualification3);
        hod2.setPanDocument("Pan Document");
        hod2.setTeacherTransfers(new ArrayList<TeacherTransfer>());
        hod2.setBookPublications(new ArrayList<BookPublication>());
        hod2.setResearchPublications(new ArrayList<ResearchPublication>());
        hod2.setPaperPresentedList(new ArrayList<PaperPresented>());
        hod2.setAadharDocument("Aadhar Document");
        hod2.setTeacherAppointments(new ArrayList<TeacherAppointment>());
        hod2.setId(123L);
        hod2.setUgQualification(ugQualification3);
        hod2.setPanNumber("42");
        hod2.setAadharNumber("42");
        hod2.setPgQualification(pgQualification3);
        Role role2 = new Role();
        role2.setRoleName(RoleName.Admin);
        role2.setId(123L);
        ResearchQualification researchQualification4 = new ResearchQualification();
        researchQualification4.setSubject("Hello from the Dreaming Spires");
        researchQualification4.setUniversity("University");
        researchQualification4.setId(123L);
        researchQualification4.setDegree("Degree");
        LocalDateTime atStartOfDayResult30 = LocalDate.of(1970, 1, 1).atStartOfDay();
        researchQualification4.setDateOfDeclaration(Date.from(atStartOfDayResult30.atZone(ZoneId.of("UTC")).toInstant()));
        User user5 = new User();
        user5.setLastName("Doe");
        user5.setEmail("jane.doe@example.org");
        user5.setPassword("password");
        user5.setHod(new Hod());
        user5.setRole(new Role());
        user5.setUserId(123L);
        LocalDateTime atStartOfDayResult31 = LocalDate.of(1970, 1, 1).atStartOfDay();
        user5.setCreatedAt(Date.from(atStartOfDayResult31.atZone(ZoneId.of("UTC")).toInstant()));
        user5.setMiddleName("Middle Name");
        user5.setFirstName("Jane");
        LocalDateTime atStartOfDayResult32 = LocalDate.of(1970, 1, 1).atStartOfDay();
        user5.setDob(Date.from(atStartOfDayResult32.atZone(ZoneId.of("UTC")).toInstant()));
        user5.setTeacher(new Teacher());
        user5.setGender("Gender");
        user5.setStudent(new Student());
        user5.setPhone("4105551212");
        EntranceQualification entranceQualification4 = new EntranceQualification();
        entranceQualification4.setSubject("Hello from the Dreaming Spires");
        entranceQualification4.setUniversity("University");
        entranceQualification4.setId(123L);
        entranceQualification4.setName("Name");
        LocalDateTime atStartOfDayResult33 = LocalDate.of(1970, 1, 1).atStartOfDay();
        entranceQualification4.setYearOfPassing(Date.from(atStartOfDayResult33.atZone(ZoneId.of("UTC")).toInstant()));
        UGQualification ugQualification4 = new UGQualification();
        ugQualification4.setDocument("Document");
        ugQualification4.setUniversity("University");
        ugQualification4.setSpecialization("Specialization");
        ugQualification4.setId(123L);
        ugQualification4.setDegree("Degree");
        ugQualification4.setGrade("Grade");
        LocalDateTime atStartOfDayResult34 = LocalDate.of(1970, 1, 1).atStartOfDay();
        ugQualification4.setYearOfPassing(Date.from(atStartOfDayResult34.atZone(ZoneId.of("UTC")).toInstant()));
        PGQualification pgQualification4 = new PGQualification();
        pgQualification4.setDocument("Document");
        pgQualification4.setUniversity("University");
        pgQualification4.setSpecialization("Specialization");
        pgQualification4.setId(123L);
        pgQualification4.setDegree("Degree");
        pgQualification4.setGrade("Grade");
        LocalDateTime atStartOfDayResult35 = LocalDate.of(1970, 1, 1).atStartOfDay();
        pgQualification4.setYearOfPassing(Date.from(atStartOfDayResult35.atZone(ZoneId.of("UTC")).toInstant()));
        Teacher teacher1 = new Teacher();
        teacher1.setResearchQualification(researchQualification4);
        teacher1.setFacultyPrograms(new ArrayList<FacultyProgram>());
        teacher1.setUser(user5);
        teacher1.setTeacherApprovals(new ArrayList<TeacherApproval>());
        teacher1.setEntranceQualification(entranceQualification4);
        teacher1.setPanDocument("Pan Document");
        teacher1.setTeacherTransfers(new ArrayList<TeacherTransfer>());
        teacher1.setBookPublications(new ArrayList<BookPublication>());
        teacher1.setResearchPublications(new ArrayList<ResearchPublication>());
        teacher1.setTeacherId(123L);
        teacher1.setPaperPresentedList(new ArrayList<PaperPresented>());
        teacher1.setAadharDocument("Aadhar Document");
        teacher1.setTeacherAppointments(new ArrayList<TeacherAppointment>());
        teacher1.setUgQualification(ugQualification4);
        teacher1.setPanNumber("42");
        teacher1.setAadharNumber("42");
        teacher1.setFacultySeminars(new ArrayList<FacultySeminar>());
        teacher1.setPgQualification(pgQualification4);
        User user6 = new User();
        user6.setLastName("Doe");
        user6.setEmail("jane.doe@example.org");
        user6.setPassword("password");
        user6.setHod(new Hod());
        user6.setRole(new Role());
        user6.setUserId(123L);
        LocalDateTime atStartOfDayResult36 = LocalDate.of(1970, 1, 1).atStartOfDay();
        user6.setCreatedAt(Date.from(atStartOfDayResult36.atZone(ZoneId.of("UTC")).toInstant()));
        user6.setMiddleName("Middle Name");
        user6.setFirstName("Jane");
        LocalDateTime atStartOfDayResult37 = LocalDate.of(1970, 1, 1).atStartOfDay();
        user6.setDob(Date.from(atStartOfDayResult37.atZone(ZoneId.of("UTC")).toInstant()));
        user6.setTeacher(new Teacher());
        user6.setGender("Gender");
        user6.setStudent(new Student());
        user6.setPhone("4105551212");
        Program program1 = new Program();
        program1.setProgramCode("Program Code");
        program1.setProgramName("Program Name");
        program1.setCourses(new ArrayList<Course>());
        program1.setProgramId(123L);
        program1.setStartYear("Start Year");
        program1.setAdmittedStudents(new ArrayList<AdmittedStudent>());
        program1.setDepartment(new Department());
        program1.setProgramType("Program Type");
        Student student1 = new Student();
        student1.setFatherName("Father Name");
        student1.setReligion("Religion");
        student1.setUser(user6);
        student1.setPanDocument("Pan Document");
        student1.setTenthMarks(10.0);
        student1.setTwelthMarks(10.0);
        student1.setStudentId(123L);
        student1.setMotherName("Mother Name");
        student1.setFatherPhoneNumber("4105551212");
        LocalDateTime atStartOfDayResult38 = LocalDate.of(1970, 1, 1).atStartOfDay();
        student1.setStartDate(Date.from(atStartOfDayResult38.atZone(ZoneId.of("UTC")).toInstant()));
        student1.setProgram(program1);
        student1.setAadharDocument("Aadhar Document");
        student1.setPanNumber("42");
        student1.setAadharNumber("42");
        LocalDateTime atStartOfDayResult39 = LocalDate.of(1970, 1, 1).atStartOfDay();
        student1.setCompletionDate(Date.from(atStartOfDayResult39.atZone(ZoneId.of("UTC")).toInstant()));
        student1.setMotherPhoneNumber("4105551212");
        student1.setCast("Cast");
        User user7 = new User();
        user7.setLastName("Doe");
        user7.setEmail("jane.doe@example.org");
        user7.setPassword("password");
        user7.setHod(hod2);
        user7.setRole(role2);
        user7.setUserId(123L);
        LocalDateTime atStartOfDayResult40 = LocalDate.of(1970, 1, 1).atStartOfDay();
        user7.setCreatedAt(Date.from(atStartOfDayResult40.atZone(ZoneId.of("UTC")).toInstant()));
        user7.setMiddleName("Middle Name");
        user7.setFirstName("Jane");
        LocalDateTime atStartOfDayResult41 = LocalDate.of(1970, 1, 1).atStartOfDay();
        user7.setDob(Date.from(atStartOfDayResult41.atZone(ZoneId.of("UTC")).toInstant()));
        user7.setTeacher(teacher1);
        user7.setGender("Gender");
        user7.setStudent(student1);
        user7.setPhone("4105551212");
        Department department = new Department();
        department.setId(123L);
        department.setDepartmentName("Department Name");
        department.setPrograms(new ArrayList<Program>());
        department.setEstablishmentYear("Establishment Year");
        Program program2 = new Program();
        program2.setProgramCode("Program Code");
        program2.setProgramName("Program Name");
        program2.setCourses(new ArrayList<Course>());
        program2.setProgramId(123L);
        program2.setStartYear("Start Year");
        program2.setAdmittedStudents(new ArrayList<AdmittedStudent>());
        program2.setDepartment(department);
        program2.setProgramType("Program Type");
        Student student2 = new Student();
        student2.setFatherName("Father Name");
        student2.setReligion("Religion");
        student2.setUser(user7);
        student2.setPanDocument("Pan Document");
        student2.setTenthMarks(10.0);
        student2.setTwelthMarks(10.0);
        student2.setStudentId(123L);
        student2.setMotherName("Mother Name");
        student2.setFatherPhoneNumber("4105551212");
        LocalDateTime atStartOfDayResult42 = LocalDate.of(1970, 1, 1).atStartOfDay();
        student2.setStartDate(Date.from(atStartOfDayResult42.atZone(ZoneId.of("UTC")).toInstant()));
        student2.setProgram(program2);
        student2.setAadharDocument("Aadhar Document");
        student2.setPanNumber("42");
        student2.setAadharNumber("42");
        LocalDateTime atStartOfDayResult43 = LocalDate.of(1970, 1, 1).atStartOfDay();
        student2.setCompletionDate(Date.from(atStartOfDayResult43.atZone(ZoneId.of("UTC")).toInstant()));
        student2.setMotherPhoneNumber("4105551212");
        student2.setCast("Cast");
        actualUser.setStudent(student2);
        ResearchQualification researchQualification5 = new ResearchQualification();
        researchQualification5.setSubject("Hello from the Dreaming Spires");
        researchQualification5.setUniversity("University");
        researchQualification5.setId(123L);
        researchQualification5.setDegree("Degree");
        LocalDateTime atStartOfDayResult44 = LocalDate.of(1970, 1, 1).atStartOfDay();
        researchQualification5.setDateOfDeclaration(Date.from(atStartOfDayResult44.atZone(ZoneId.of("UTC")).toInstant()));
        ResearchQualification researchQualification6 = new ResearchQualification();
        researchQualification6.setSubject("Hello from the Dreaming Spires");
        researchQualification6.setUniversity("University");
        researchQualification6.setId(123L);
        researchQualification6.setDegree("Degree");
        LocalDateTime atStartOfDayResult45 = LocalDate.of(1970, 1, 1).atStartOfDay();
        researchQualification6.setDateOfDeclaration(Date.from(atStartOfDayResult45.atZone(ZoneId.of("UTC")).toInstant()));
        User user8 = new User();
        user8.setLastName("Doe");
        user8.setEmail("jane.doe@example.org");
        user8.setPassword("password");
        user8.setHod(new Hod());
        user8.setRole(new Role());
        user8.setUserId(123L);
        LocalDateTime atStartOfDayResult46 = LocalDate.of(1970, 1, 1).atStartOfDay();
        user8.setCreatedAt(Date.from(atStartOfDayResult46.atZone(ZoneId.of("UTC")).toInstant()));
        user8.setMiddleName("Middle Name");
        user8.setFirstName("Jane");
        LocalDateTime atStartOfDayResult47 = LocalDate.of(1970, 1, 1).atStartOfDay();
        user8.setDob(Date.from(atStartOfDayResult47.atZone(ZoneId.of("UTC")).toInstant()));
        user8.setTeacher(new Teacher());
        user8.setGender("Gender");
        user8.setStudent(new Student());
        user8.setPhone("4105551212");
        EntranceQualification entranceQualification5 = new EntranceQualification();
        entranceQualification5.setSubject("Hello from the Dreaming Spires");
        entranceQualification5.setUniversity("University");
        entranceQualification5.setId(123L);
        entranceQualification5.setName("Name");
        LocalDateTime atStartOfDayResult48 = LocalDate.of(1970, 1, 1).atStartOfDay();
        entranceQualification5.setYearOfPassing(Date.from(atStartOfDayResult48.atZone(ZoneId.of("UTC")).toInstant()));
        UGQualification ugQualification5 = new UGQualification();
        ugQualification5.setDocument("Document");
        ugQualification5.setUniversity("University");
        ugQualification5.setSpecialization("Specialization");
        ugQualification5.setId(123L);
        ugQualification5.setDegree("Degree");
        ugQualification5.setGrade("Grade");
        LocalDateTime atStartOfDayResult49 = LocalDate.of(1970, 1, 1).atStartOfDay();
        ugQualification5.setYearOfPassing(Date.from(atStartOfDayResult49.atZone(ZoneId.of("UTC")).toInstant()));
        PGQualification pgQualification5 = new PGQualification();
        pgQualification5.setDocument("Document");
        pgQualification5.setUniversity("University");
        pgQualification5.setSpecialization("Specialization");
        pgQualification5.setId(123L);
        pgQualification5.setDegree("Degree");
        pgQualification5.setGrade("Grade");
        LocalDateTime atStartOfDayResult50 = LocalDate.of(1970, 1, 1).atStartOfDay();
        pgQualification5.setYearOfPassing(Date.from(atStartOfDayResult50.atZone(ZoneId.of("UTC")).toInstant()));
        Hod hod3 = new Hod();
        hod3.setResearchQualification(researchQualification6);
        hod3.setUser(user8);
        hod3.setTeacherApprovals(new ArrayList<TeacherApproval>());
        hod3.setEntranceQualification(entranceQualification5);
        hod3.setPanDocument("Pan Document");
        hod3.setTeacherTransfers(new ArrayList<TeacherTransfer>());
        hod3.setBookPublications(new ArrayList<BookPublication>());
        hod3.setResearchPublications(new ArrayList<ResearchPublication>());
        hod3.setPaperPresentedList(new ArrayList<PaperPresented>());
        hod3.setAadharDocument("Aadhar Document");
        hod3.setTeacherAppointments(new ArrayList<TeacherAppointment>());
        hod3.setId(123L);
        hod3.setUgQualification(ugQualification5);
        hod3.setPanNumber("42");
        hod3.setAadharNumber("42");
        hod3.setPgQualification(pgQualification5);
        Role role3 = new Role();
        role3.setRoleName(RoleName.Admin);
        role3.setId(123L);
        ResearchQualification researchQualification7 = new ResearchQualification();
        researchQualification7.setSubject("Hello from the Dreaming Spires");
        researchQualification7.setUniversity("University");
        researchQualification7.setId(123L);
        researchQualification7.setDegree("Degree");
        LocalDateTime atStartOfDayResult51 = LocalDate.of(1970, 1, 1).atStartOfDay();
        researchQualification7.setDateOfDeclaration(Date.from(atStartOfDayResult51.atZone(ZoneId.of("UTC")).toInstant()));
        User user9 = new User();
        user9.setLastName("Doe");
        user9.setEmail("jane.doe@example.org");
        user9.setPassword("password");
        user9.setHod(new Hod());
        user9.setRole(new Role());
        user9.setUserId(123L);
        LocalDateTime atStartOfDayResult52 = LocalDate.of(1970, 1, 1).atStartOfDay();
        user9.setCreatedAt(Date.from(atStartOfDayResult52.atZone(ZoneId.of("UTC")).toInstant()));
        user9.setMiddleName("Middle Name");
        user9.setFirstName("Jane");
        LocalDateTime atStartOfDayResult53 = LocalDate.of(1970, 1, 1).atStartOfDay();
        user9.setDob(Date.from(atStartOfDayResult53.atZone(ZoneId.of("UTC")).toInstant()));
        user9.setTeacher(new Teacher());
        user9.setGender("Gender");
        user9.setStudent(new Student());
        user9.setPhone("4105551212");
        EntranceQualification entranceQualification6 = new EntranceQualification();
        entranceQualification6.setSubject("Hello from the Dreaming Spires");
        entranceQualification6.setUniversity("University");
        entranceQualification6.setId(123L);
        entranceQualification6.setName("Name");
        LocalDateTime atStartOfDayResult54 = LocalDate.of(1970, 1, 1).atStartOfDay();
        entranceQualification6.setYearOfPassing(Date.from(atStartOfDayResult54.atZone(ZoneId.of("UTC")).toInstant()));
        UGQualification ugQualification6 = new UGQualification();
        ugQualification6.setDocument("Document");
        ugQualification6.setUniversity("University");
        ugQualification6.setSpecialization("Specialization");
        ugQualification6.setId(123L);
        ugQualification6.setDegree("Degree");
        ugQualification6.setGrade("Grade");
        LocalDateTime atStartOfDayResult55 = LocalDate.of(1970, 1, 1).atStartOfDay();
        ugQualification6.setYearOfPassing(Date.from(atStartOfDayResult55.atZone(ZoneId.of("UTC")).toInstant()));
        PGQualification pgQualification6 = new PGQualification();
        pgQualification6.setDocument("Document");
        pgQualification6.setUniversity("University");
        pgQualification6.setSpecialization("Specialization");
        pgQualification6.setId(123L);
        pgQualification6.setDegree("Degree");
        pgQualification6.setGrade("Grade");
        LocalDateTime atStartOfDayResult56 = LocalDate.of(1970, 1, 1).atStartOfDay();
        pgQualification6.setYearOfPassing(Date.from(atStartOfDayResult56.atZone(ZoneId.of("UTC")).toInstant()));
        Teacher teacher2 = new Teacher();
        teacher2.setResearchQualification(researchQualification7);
        teacher2.setFacultyPrograms(new ArrayList<FacultyProgram>());
        teacher2.setUser(user9);
        teacher2.setTeacherApprovals(new ArrayList<TeacherApproval>());
        teacher2.setEntranceQualification(entranceQualification6);
        teacher2.setPanDocument("Pan Document");
        teacher2.setTeacherTransfers(new ArrayList<TeacherTransfer>());
        teacher2.setBookPublications(new ArrayList<BookPublication>());
        teacher2.setResearchPublications(new ArrayList<ResearchPublication>());
        teacher2.setTeacherId(123L);
        teacher2.setPaperPresentedList(new ArrayList<PaperPresented>());
        teacher2.setAadharDocument("Aadhar Document");
        teacher2.setTeacherAppointments(new ArrayList<TeacherAppointment>());
        teacher2.setUgQualification(ugQualification6);
        teacher2.setPanNumber("42");
        teacher2.setAadharNumber("42");
        teacher2.setFacultySeminars(new ArrayList<FacultySeminar>());
        teacher2.setPgQualification(pgQualification6);
        User user10 = new User();
        user10.setLastName("Doe");
        user10.setEmail("jane.doe@example.org");
        user10.setPassword("password");
        user10.setHod(new Hod());
        user10.setRole(new Role());
        user10.setUserId(123L);
        LocalDateTime atStartOfDayResult57 = LocalDate.of(1970, 1, 1).atStartOfDay();
        user10.setCreatedAt(Date.from(atStartOfDayResult57.atZone(ZoneId.of("UTC")).toInstant()));
        user10.setMiddleName("Middle Name");
        user10.setFirstName("Jane");
        LocalDateTime atStartOfDayResult58 = LocalDate.of(1970, 1, 1).atStartOfDay();
        user10.setDob(Date.from(atStartOfDayResult58.atZone(ZoneId.of("UTC")).toInstant()));
        user10.setTeacher(new Teacher());
        user10.setGender("Gender");
        user10.setStudent(new Student());
        user10.setPhone("4105551212");
        Program program3 = new Program();
        program3.setProgramCode("Program Code");
        program3.setProgramName("Program Name");
        program3.setCourses(new ArrayList<Course>());
        program3.setProgramId(123L);
        program3.setStartYear("Start Year");
        program3.setAdmittedStudents(new ArrayList<AdmittedStudent>());
        program3.setDepartment(new Department());
        program3.setProgramType("Program Type");
        Student student3 = new Student();
        student3.setFatherName("Father Name");
        student3.setReligion("Religion");
        student3.setUser(user10);
        student3.setPanDocument("Pan Document");
        student3.setTenthMarks(10.0);
        student3.setTwelthMarks(10.0);
        student3.setStudentId(123L);
        student3.setMotherName("Mother Name");
        student3.setFatherPhoneNumber("4105551212");
        LocalDateTime atStartOfDayResult59 = LocalDate.of(1970, 1, 1).atStartOfDay();
        student3.setStartDate(Date.from(atStartOfDayResult59.atZone(ZoneId.of("UTC")).toInstant()));
        student3.setProgram(program3);
        student3.setAadharDocument("Aadhar Document");
        student3.setPanNumber("42");
        student3.setAadharNumber("42");
        LocalDateTime atStartOfDayResult60 = LocalDate.of(1970, 1, 1).atStartOfDay();
        student3.setCompletionDate(Date.from(atStartOfDayResult60.atZone(ZoneId.of("UTC")).toInstant()));
        student3.setMotherPhoneNumber("4105551212");
        student3.setCast("Cast");
        User user11 = new User();
        user11.setLastName("Doe");
        user11.setEmail("jane.doe@example.org");
        user11.setPassword("password");
        user11.setHod(hod3);
        user11.setRole(role3);
        user11.setUserId(123L);
        LocalDateTime atStartOfDayResult61 = LocalDate.of(1970, 1, 1).atStartOfDay();
        user11.setCreatedAt(Date.from(atStartOfDayResult61.atZone(ZoneId.of("UTC")).toInstant()));
        user11.setMiddleName("Middle Name");
        user11.setFirstName("Jane");
        LocalDateTime atStartOfDayResult62 = LocalDate.of(1970, 1, 1).atStartOfDay();
        user11.setDob(Date.from(atStartOfDayResult62.atZone(ZoneId.of("UTC")).toInstant()));
        user11.setTeacher(teacher2);
        user11.setGender("Gender");
        user11.setStudent(student3);
        user11.setPhone("4105551212");
        EntranceQualification entranceQualification7 = new EntranceQualification();
        entranceQualification7.setSubject("Hello from the Dreaming Spires");
        entranceQualification7.setUniversity("University");
        entranceQualification7.setId(123L);
        entranceQualification7.setName("Name");
        LocalDateTime atStartOfDayResult63 = LocalDate.of(1970, 1, 1).atStartOfDay();
        entranceQualification7.setYearOfPassing(Date.from(atStartOfDayResult63.atZone(ZoneId.of("UTC")).toInstant()));
        UGQualification ugQualification7 = new UGQualification();
        ugQualification7.setDocument("Document");
        ugQualification7.setUniversity("University");
        ugQualification7.setSpecialization("Specialization");
        ugQualification7.setId(123L);
        ugQualification7.setDegree("Degree");
        ugQualification7.setGrade("Grade");
        LocalDateTime atStartOfDayResult64 = LocalDate.of(1970, 1, 1).atStartOfDay();
        ugQualification7.setYearOfPassing(Date.from(atStartOfDayResult64.atZone(ZoneId.of("UTC")).toInstant()));
        PGQualification pgQualification7 = new PGQualification();
        pgQualification7.setDocument("Document");
        pgQualification7.setUniversity("University");
        pgQualification7.setSpecialization("Specialization");
        pgQualification7.setId(123L);
        pgQualification7.setDegree("Degree");
        pgQualification7.setGrade("Grade");
        LocalDateTime atStartOfDayResult65 = LocalDate.of(1970, 1, 1).atStartOfDay();
        pgQualification7.setYearOfPassing(Date.from(atStartOfDayResult65.atZone(ZoneId.of("UTC")).toInstant()));
        Teacher teacher3 = new Teacher();
        teacher3.setResearchQualification(researchQualification5);
        teacher3.setFacultyPrograms(new ArrayList<FacultyProgram>());
        teacher3.setUser(user11);
        teacher3.setTeacherApprovals(new ArrayList<TeacherApproval>());
        teacher3.setEntranceQualification(entranceQualification7);
        teacher3.setPanDocument("Pan Document");
        teacher3.setTeacherTransfers(new ArrayList<TeacherTransfer>());
        teacher3.setBookPublications(new ArrayList<BookPublication>());
        teacher3.setResearchPublications(new ArrayList<ResearchPublication>());
        teacher3.setTeacherId(123L);
        teacher3.setPaperPresentedList(new ArrayList<PaperPresented>());
        teacher3.setAadharDocument("Aadhar Document");
        teacher3.setTeacherAppointments(new ArrayList<TeacherAppointment>());
        teacher3.setUgQualification(ugQualification7);
        teacher3.setPanNumber("42");
        teacher3.setAadharNumber("42");
        teacher3.setFacultySeminars(new ArrayList<FacultySeminar>());
        teacher3.setPgQualification(pgQualification7);
        actualUser.setTeacher(teacher3);
        actualUser.setUserId(123L);
        assertSame(fromResult, actualUser.getCreatedAt());
        assertSame(fromResult1, actualUser.getDob());
        assertEquals("jane.doe@example.org", actualUser.getEmail());
        assertEquals("Jane", actualUser.getFirstName());
        assertEquals("Gender", actualUser.getGender());
        assertSame(hod1, actualUser.getHod());
        assertEquals("Doe", actualUser.getLastName());
        assertEquals("Middle Name", actualUser.getMiddleName());
        assertEquals("password", actualUser.getPassword());
        assertEquals("4105551212", actualUser.getPhone());
        assertSame(role1, actualUser.getRole());
        assertSame(student2, actualUser.getStudent());
        assertSame(teacher3, actualUser.getTeacher());
        assertEquals(123L, actualUser.getUserId().longValue());
    }

    @Test
    void testConstructor2() {
        Date dob = new Date(1L);
        Role role = new Role();
        Date createdAt = new Date(1L);
        Student student = new Student();
        Teacher teacher = new Teacher();
        User actualUser = new User(123L, "Jane", "Middle Name", "Doe", dob, "jane.doe@example.org", "Gender", "4105551212",
                "password", role, createdAt, student, teacher, new Hod());
        LocalDateTime atStartOfDayResult = LocalDate.of(1970, 1, 1).atStartOfDay();
        Date fromResult = Date.from(atStartOfDayResult.atZone(ZoneId.of("UTC")).toInstant());
        actualUser.setCreatedAt(fromResult);
        LocalDateTime atStartOfDayResult1 = LocalDate.of(1970, 1, 1).atStartOfDay();
        Date fromResult1 = Date.from(atStartOfDayResult1.atZone(ZoneId.of("UTC")).toInstant());
        actualUser.setDob(fromResult1);
        actualUser.setEmail("jane.doe@example.org");
        actualUser.setFirstName("Jane");
        actualUser.setGender("Gender");
        ResearchQualification researchQualification = new ResearchQualification();
        researchQualification.setSubject("Hello from the Dreaming Spires");
        researchQualification.setUniversity("University");
        researchQualification.setId(123L);
        researchQualification.setDegree("Degree");
        LocalDateTime atStartOfDayResult2 = LocalDate.of(1970, 1, 1).atStartOfDay();
        researchQualification.setDateOfDeclaration(Date.from(atStartOfDayResult2.atZone(ZoneId.of("UTC")).toInstant()));
        ResearchQualification researchQualification1 = new ResearchQualification();
        researchQualification1.setSubject("Hello from the Dreaming Spires");
        researchQualification1.setUniversity("University");
        researchQualification1.setId(123L);
        researchQualification1.setDegree("Degree");
        LocalDateTime atStartOfDayResult3 = LocalDate.of(1970, 1, 1).atStartOfDay();
        researchQualification1.setDateOfDeclaration(Date.from(atStartOfDayResult3.atZone(ZoneId.of("UTC")).toInstant()));
        User user = new User();
        user.setLastName("Doe");
        user.setEmail("jane.doe@example.org");
        user.setPassword("password");
        user.setHod(new Hod());
        user.setRole(new Role());
        user.setUserId(123L);
        LocalDateTime atStartOfDayResult4 = LocalDate.of(1970, 1, 1).atStartOfDay();
        user.setCreatedAt(Date.from(atStartOfDayResult4.atZone(ZoneId.of("UTC")).toInstant()));
        user.setMiddleName("Middle Name");
        user.setFirstName("Jane");
        LocalDateTime atStartOfDayResult5 = LocalDate.of(1970, 1, 1).atStartOfDay();
        user.setDob(Date.from(atStartOfDayResult5.atZone(ZoneId.of("UTC")).toInstant()));
        user.setTeacher(new Teacher());
        user.setGender("Gender");
        user.setStudent(new Student());
        user.setPhone("4105551212");
        EntranceQualification entranceQualification = new EntranceQualification();
        entranceQualification.setSubject("Hello from the Dreaming Spires");
        entranceQualification.setUniversity("University");
        entranceQualification.setId(123L);
        entranceQualification.setName("Name");
        LocalDateTime atStartOfDayResult6 = LocalDate.of(1970, 1, 1).atStartOfDay();
        entranceQualification.setYearOfPassing(Date.from(atStartOfDayResult6.atZone(ZoneId.of("UTC")).toInstant()));
        UGQualification ugQualification = new UGQualification();
        ugQualification.setDocument("Document");
        ugQualification.setUniversity("University");
        ugQualification.setSpecialization("Specialization");
        ugQualification.setId(123L);
        ugQualification.setDegree("Degree");
        ugQualification.setGrade("Grade");
        LocalDateTime atStartOfDayResult7 = LocalDate.of(1970, 1, 1).atStartOfDay();
        ugQualification.setYearOfPassing(Date.from(atStartOfDayResult7.atZone(ZoneId.of("UTC")).toInstant()));
        PGQualification pgQualification = new PGQualification();
        pgQualification.setDocument("Document");
        pgQualification.setUniversity("University");
        pgQualification.setSpecialization("Specialization");
        pgQualification.setId(123L);
        pgQualification.setDegree("Degree");
        pgQualification.setGrade("Grade");
        LocalDateTime atStartOfDayResult8 = LocalDate.of(1970, 1, 1).atStartOfDay();
        pgQualification.setYearOfPassing(Date.from(atStartOfDayResult8.atZone(ZoneId.of("UTC")).toInstant()));
        Hod hod = new Hod();
        hod.setResearchQualification(researchQualification1);
        hod.setUser(user);
        hod.setTeacherApprovals(new ArrayList<TeacherApproval>());
        hod.setEntranceQualification(entranceQualification);
        hod.setPanDocument("Pan Document");
        hod.setTeacherTransfers(new ArrayList<TeacherTransfer>());
        hod.setBookPublications(new ArrayList<BookPublication>());
        hod.setResearchPublications(new ArrayList<ResearchPublication>());
        hod.setPaperPresentedList(new ArrayList<PaperPresented>());
        hod.setAadharDocument("Aadhar Document");
        hod.setTeacherAppointments(new ArrayList<TeacherAppointment>());
        hod.setId(123L);
        hod.setUgQualification(ugQualification);
        hod.setPanNumber("42");
        hod.setAadharNumber("42");
        hod.setPgQualification(pgQualification);
        Role role1 = new Role();
        role1.setRoleName(RoleName.Admin);
        role1.setId(123L);
        ResearchQualification researchQualification2 = new ResearchQualification();
        researchQualification2.setSubject("Hello from the Dreaming Spires");
        researchQualification2.setUniversity("University");
        researchQualification2.setId(123L);
        researchQualification2.setDegree("Degree");
        LocalDateTime atStartOfDayResult9 = LocalDate.of(1970, 1, 1).atStartOfDay();
        researchQualification2.setDateOfDeclaration(Date.from(atStartOfDayResult9.atZone(ZoneId.of("UTC")).toInstant()));
        User user1 = new User();
        user1.setLastName("Doe");
        user1.setEmail("jane.doe@example.org");
        user1.setPassword("password");
        user1.setHod(new Hod());
        user1.setRole(new Role());
        user1.setUserId(123L);
        LocalDateTime atStartOfDayResult10 = LocalDate.of(1970, 1, 1).atStartOfDay();
        user1.setCreatedAt(Date.from(atStartOfDayResult10.atZone(ZoneId.of("UTC")).toInstant()));
        user1.setMiddleName("Middle Name");
        user1.setFirstName("Jane");
        LocalDateTime atStartOfDayResult11 = LocalDate.of(1970, 1, 1).atStartOfDay();
        user1.setDob(Date.from(atStartOfDayResult11.atZone(ZoneId.of("UTC")).toInstant()));
        user1.setTeacher(new Teacher());
        user1.setGender("Gender");
        user1.setStudent(new Student());
        user1.setPhone("4105551212");
        EntranceQualification entranceQualification1 = new EntranceQualification();
        entranceQualification1.setSubject("Hello from the Dreaming Spires");
        entranceQualification1.setUniversity("University");
        entranceQualification1.setId(123L);
        entranceQualification1.setName("Name");
        LocalDateTime atStartOfDayResult12 = LocalDate.of(1970, 1, 1).atStartOfDay();
        entranceQualification1.setYearOfPassing(Date.from(atStartOfDayResult12.atZone(ZoneId.of("UTC")).toInstant()));
        UGQualification ugQualification1 = new UGQualification();
        ugQualification1.setDocument("Document");
        ugQualification1.setUniversity("University");
        ugQualification1.setSpecialization("Specialization");
        ugQualification1.setId(123L);
        ugQualification1.setDegree("Degree");
        ugQualification1.setGrade("Grade");
        LocalDateTime atStartOfDayResult13 = LocalDate.of(1970, 1, 1).atStartOfDay();
        ugQualification1.setYearOfPassing(Date.from(atStartOfDayResult13.atZone(ZoneId.of("UTC")).toInstant()));
        PGQualification pgQualification1 = new PGQualification();
        pgQualification1.setDocument("Document");
        pgQualification1.setUniversity("University");
        pgQualification1.setSpecialization("Specialization");
        pgQualification1.setId(123L);
        pgQualification1.setDegree("Degree");
        pgQualification1.setGrade("Grade");
        LocalDateTime atStartOfDayResult14 = LocalDate.of(1970, 1, 1).atStartOfDay();
        pgQualification1.setYearOfPassing(Date.from(atStartOfDayResult14.atZone(ZoneId.of("UTC")).toInstant()));
        Teacher teacher1 = new Teacher();
        teacher1.setResearchQualification(researchQualification2);
        teacher1.setFacultyPrograms(new ArrayList<FacultyProgram>());
        teacher1.setUser(user1);
        teacher1.setTeacherApprovals(new ArrayList<TeacherApproval>());
        teacher1.setEntranceQualification(entranceQualification1);
        teacher1.setPanDocument("Pan Document");
        teacher1.setTeacherTransfers(new ArrayList<TeacherTransfer>());
        teacher1.setBookPublications(new ArrayList<BookPublication>());
        teacher1.setResearchPublications(new ArrayList<ResearchPublication>());
        teacher1.setTeacherId(123L);
        teacher1.setPaperPresentedList(new ArrayList<PaperPresented>());
        teacher1.setAadharDocument("Aadhar Document");
        teacher1.setTeacherAppointments(new ArrayList<TeacherAppointment>());
        teacher1.setUgQualification(ugQualification1);
        teacher1.setPanNumber("42");
        teacher1.setAadharNumber("42");
        teacher1.setFacultySeminars(new ArrayList<FacultySeminar>());
        teacher1.setPgQualification(pgQualification1);
        User user2 = new User();
        user2.setLastName("Doe");
        user2.setEmail("jane.doe@example.org");
        user2.setPassword("password");
        user2.setHod(new Hod());
        user2.setRole(new Role());
        user2.setUserId(123L);
        LocalDateTime atStartOfDayResult15 = LocalDate.of(1970, 1, 1).atStartOfDay();
        user2.setCreatedAt(Date.from(atStartOfDayResult15.atZone(ZoneId.of("UTC")).toInstant()));
        user2.setMiddleName("Middle Name");
        user2.setFirstName("Jane");
        LocalDateTime atStartOfDayResult16 = LocalDate.of(1970, 1, 1).atStartOfDay();
        user2.setDob(Date.from(atStartOfDayResult16.atZone(ZoneId.of("UTC")).toInstant()));
        user2.setTeacher(new Teacher());
        user2.setGender("Gender");
        user2.setStudent(new Student());
        user2.setPhone("4105551212");
        Program program = new Program();
        program.setProgramCode("Program Code");
        program.setProgramName("Program Name");
        program.setCourses(new ArrayList<Course>());
        program.setProgramId(123L);
        program.setStartYear("Start Year");
        program.setAdmittedStudents(new ArrayList<AdmittedStudent>());
        program.setDepartment(new Department());
        program.setProgramType("Program Type");
        Student student1 = new Student();
        student1.setFatherName("Father Name");
        student1.setReligion("Religion");
        student1.setUser(user2);
        student1.setPanDocument("Pan Document");
        student1.setTenthMarks(10.0);
        student1.setTwelthMarks(10.0);
        student1.setStudentId(123L);
        student1.setMotherName("Mother Name");
        student1.setFatherPhoneNumber("4105551212");
        LocalDateTime atStartOfDayResult17 = LocalDate.of(1970, 1, 1).atStartOfDay();
        student1.setStartDate(Date.from(atStartOfDayResult17.atZone(ZoneId.of("UTC")).toInstant()));
        student1.setProgram(program);
        student1.setAadharDocument("Aadhar Document");
        student1.setPanNumber("42");
        student1.setAadharNumber("42");
        LocalDateTime atStartOfDayResult18 = LocalDate.of(1970, 1, 1).atStartOfDay();
        student1.setCompletionDate(Date.from(atStartOfDayResult18.atZone(ZoneId.of("UTC")).toInstant()));
        student1.setMotherPhoneNumber("4105551212");
        student1.setCast("Cast");
        User user3 = new User();
        user3.setLastName("Doe");
        user3.setEmail("jane.doe@example.org");
        user3.setPassword("password");
        user3.setHod(hod);
        user3.setRole(role1);
        user3.setUserId(123L);
        LocalDateTime atStartOfDayResult19 = LocalDate.of(1970, 1, 1).atStartOfDay();
        user3.setCreatedAt(Date.from(atStartOfDayResult19.atZone(ZoneId.of("UTC")).toInstant()));
        user3.setMiddleName("Middle Name");
        user3.setFirstName("Jane");
        LocalDateTime atStartOfDayResult20 = LocalDate.of(1970, 1, 1).atStartOfDay();
        user3.setDob(Date.from(atStartOfDayResult20.atZone(ZoneId.of("UTC")).toInstant()));
        user3.setTeacher(teacher1);
        user3.setGender("Gender");
        user3.setStudent(student1);
        user3.setPhone("4105551212");
        EntranceQualification entranceQualification2 = new EntranceQualification();
        entranceQualification2.setSubject("Hello from the Dreaming Spires");
        entranceQualification2.setUniversity("University");
        entranceQualification2.setId(123L);
        entranceQualification2.setName("Name");
        LocalDateTime atStartOfDayResult21 = LocalDate.of(1970, 1, 1).atStartOfDay();
        entranceQualification2.setYearOfPassing(Date.from(atStartOfDayResult21.atZone(ZoneId.of("UTC")).toInstant()));
        UGQualification ugQualification2 = new UGQualification();
        ugQualification2.setDocument("Document");
        ugQualification2.setUniversity("University");
        ugQualification2.setSpecialization("Specialization");
        ugQualification2.setId(123L);
        ugQualification2.setDegree("Degree");
        ugQualification2.setGrade("Grade");
        LocalDateTime atStartOfDayResult22 = LocalDate.of(1970, 1, 1).atStartOfDay();
        ugQualification2.setYearOfPassing(Date.from(atStartOfDayResult22.atZone(ZoneId.of("UTC")).toInstant()));
        PGQualification pgQualification2 = new PGQualification();
        pgQualification2.setDocument("Document");
        pgQualification2.setUniversity("University");
        pgQualification2.setSpecialization("Specialization");
        pgQualification2.setId(123L);
        pgQualification2.setDegree("Degree");
        pgQualification2.setGrade("Grade");
        LocalDateTime atStartOfDayResult23 = LocalDate.of(1970, 1, 1).atStartOfDay();
        pgQualification2.setYearOfPassing(Date.from(atStartOfDayResult23.atZone(ZoneId.of("UTC")).toInstant()));
        Hod hod1 = new Hod();
        hod1.setResearchQualification(researchQualification);
        hod1.setUser(user3);
        hod1.setTeacherApprovals(new ArrayList<TeacherApproval>());
        hod1.setEntranceQualification(entranceQualification2);
        hod1.setPanDocument("Pan Document");
        hod1.setTeacherTransfers(new ArrayList<TeacherTransfer>());
        hod1.setBookPublications(new ArrayList<BookPublication>());
        hod1.setResearchPublications(new ArrayList<ResearchPublication>());
        hod1.setPaperPresentedList(new ArrayList<PaperPresented>());
        hod1.setAadharDocument("Aadhar Document");
        hod1.setTeacherAppointments(new ArrayList<TeacherAppointment>());
        hod1.setId(123L);
        hod1.setUgQualification(ugQualification2);
        hod1.setPanNumber("42");
        hod1.setAadharNumber("42");
        hod1.setPgQualification(pgQualification2);
        actualUser.setHod(hod1);
        actualUser.setLastName("Doe");
        actualUser.setMiddleName("Middle Name");
        actualUser.setPassword("password");
        actualUser.setPhone("4105551212");
        Role role2 = new Role();
        role2.setRoleName(RoleName.Admin);
        role2.setId(123L);
        actualUser.setRole(role2);
        ResearchQualification researchQualification3 = new ResearchQualification();
        researchQualification3.setSubject("Hello from the Dreaming Spires");
        researchQualification3.setUniversity("University");
        researchQualification3.setId(123L);
        researchQualification3.setDegree("Degree");
        LocalDateTime atStartOfDayResult24 = LocalDate.of(1970, 1, 1).atStartOfDay();
        researchQualification3.setDateOfDeclaration(Date.from(atStartOfDayResult24.atZone(ZoneId.of("UTC")).toInstant()));
        User user4 = new User();
        user4.setLastName("Doe");
        user4.setEmail("jane.doe@example.org");
        user4.setPassword("password");
        user4.setHod(new Hod());
        user4.setRole(new Role());
        user4.setUserId(123L);
        LocalDateTime atStartOfDayResult25 = LocalDate.of(1970, 1, 1).atStartOfDay();
        user4.setCreatedAt(Date.from(atStartOfDayResult25.atZone(ZoneId.of("UTC")).toInstant()));
        user4.setMiddleName("Middle Name");
        user4.setFirstName("Jane");
        LocalDateTime atStartOfDayResult26 = LocalDate.of(1970, 1, 1).atStartOfDay();
        user4.setDob(Date.from(atStartOfDayResult26.atZone(ZoneId.of("UTC")).toInstant()));
        user4.setTeacher(new Teacher());
        user4.setGender("Gender");
        user4.setStudent(new Student());
        user4.setPhone("4105551212");
        EntranceQualification entranceQualification3 = new EntranceQualification();
        entranceQualification3.setSubject("Hello from the Dreaming Spires");
        entranceQualification3.setUniversity("University");
        entranceQualification3.setId(123L);
        entranceQualification3.setName("Name");
        LocalDateTime atStartOfDayResult27 = LocalDate.of(1970, 1, 1).atStartOfDay();
        entranceQualification3.setYearOfPassing(Date.from(atStartOfDayResult27.atZone(ZoneId.of("UTC")).toInstant()));
        UGQualification ugQualification3 = new UGQualification();
        ugQualification3.setDocument("Document");
        ugQualification3.setUniversity("University");
        ugQualification3.setSpecialization("Specialization");
        ugQualification3.setId(123L);
        ugQualification3.setDegree("Degree");
        ugQualification3.setGrade("Grade");
        LocalDateTime atStartOfDayResult28 = LocalDate.of(1970, 1, 1).atStartOfDay();
        ugQualification3.setYearOfPassing(Date.from(atStartOfDayResult28.atZone(ZoneId.of("UTC")).toInstant()));
        PGQualification pgQualification3 = new PGQualification();
        pgQualification3.setDocument("Document");
        pgQualification3.setUniversity("University");
        pgQualification3.setSpecialization("Specialization");
        pgQualification3.setId(123L);
        pgQualification3.setDegree("Degree");
        pgQualification3.setGrade("Grade");
        LocalDateTime atStartOfDayResult29 = LocalDate.of(1970, 1, 1).atStartOfDay();
        pgQualification3.setYearOfPassing(Date.from(atStartOfDayResult29.atZone(ZoneId.of("UTC")).toInstant()));
        Hod hod2 = new Hod();
        hod2.setResearchQualification(researchQualification3);
        hod2.setUser(user4);
        hod2.setTeacherApprovals(new ArrayList<TeacherApproval>());
        hod2.setEntranceQualification(entranceQualification3);
        hod2.setPanDocument("Pan Document");
        hod2.setTeacherTransfers(new ArrayList<TeacherTransfer>());
        hod2.setBookPublications(new ArrayList<BookPublication>());
        hod2.setResearchPublications(new ArrayList<ResearchPublication>());
        hod2.setPaperPresentedList(new ArrayList<PaperPresented>());
        hod2.setAadharDocument("Aadhar Document");
        hod2.setTeacherAppointments(new ArrayList<TeacherAppointment>());
        hod2.setId(123L);
        hod2.setUgQualification(ugQualification3);
        hod2.setPanNumber("42");
        hod2.setAadharNumber("42");
        hod2.setPgQualification(pgQualification3);
        Role role3 = new Role();
        role3.setRoleName(RoleName.Admin);
        role3.setId(123L);
        ResearchQualification researchQualification4 = new ResearchQualification();
        researchQualification4.setSubject("Hello from the Dreaming Spires");
        researchQualification4.setUniversity("University");
        researchQualification4.setId(123L);
        researchQualification4.setDegree("Degree");
        LocalDateTime atStartOfDayResult30 = LocalDate.of(1970, 1, 1).atStartOfDay();
        researchQualification4.setDateOfDeclaration(Date.from(atStartOfDayResult30.atZone(ZoneId.of("UTC")).toInstant()));
        User user5 = new User();
        user5.setLastName("Doe");
        user5.setEmail("jane.doe@example.org");
        user5.setPassword("password");
        user5.setHod(new Hod());
        user5.setRole(new Role());
        user5.setUserId(123L);
        LocalDateTime atStartOfDayResult31 = LocalDate.of(1970, 1, 1).atStartOfDay();
        user5.setCreatedAt(Date.from(atStartOfDayResult31.atZone(ZoneId.of("UTC")).toInstant()));
        user5.setMiddleName("Middle Name");
        user5.setFirstName("Jane");
        LocalDateTime atStartOfDayResult32 = LocalDate.of(1970, 1, 1).atStartOfDay();
        user5.setDob(Date.from(atStartOfDayResult32.atZone(ZoneId.of("UTC")).toInstant()));
        user5.setTeacher(new Teacher());
        user5.setGender("Gender");
        user5.setStudent(new Student());
        user5.setPhone("4105551212");
        EntranceQualification entranceQualification4 = new EntranceQualification();
        entranceQualification4.setSubject("Hello from the Dreaming Spires");
        entranceQualification4.setUniversity("University");
        entranceQualification4.setId(123L);
        entranceQualification4.setName("Name");
        LocalDateTime atStartOfDayResult33 = LocalDate.of(1970, 1, 1).atStartOfDay();
        entranceQualification4.setYearOfPassing(Date.from(atStartOfDayResult33.atZone(ZoneId.of("UTC")).toInstant()));
        UGQualification ugQualification4 = new UGQualification();
        ugQualification4.setDocument("Document");
        ugQualification4.setUniversity("University");
        ugQualification4.setSpecialization("Specialization");
        ugQualification4.setId(123L);
        ugQualification4.setDegree("Degree");
        ugQualification4.setGrade("Grade");
        LocalDateTime atStartOfDayResult34 = LocalDate.of(1970, 1, 1).atStartOfDay();
        ugQualification4.setYearOfPassing(Date.from(atStartOfDayResult34.atZone(ZoneId.of("UTC")).toInstant()));
        PGQualification pgQualification4 = new PGQualification();
        pgQualification4.setDocument("Document");
        pgQualification4.setUniversity("University");
        pgQualification4.setSpecialization("Specialization");
        pgQualification4.setId(123L);
        pgQualification4.setDegree("Degree");
        pgQualification4.setGrade("Grade");
        LocalDateTime atStartOfDayResult35 = LocalDate.of(1970, 1, 1).atStartOfDay();
        pgQualification4.setYearOfPassing(Date.from(atStartOfDayResult35.atZone(ZoneId.of("UTC")).toInstant()));
        Teacher teacher2 = new Teacher();
        teacher2.setResearchQualification(researchQualification4);
        teacher2.setFacultyPrograms(new ArrayList<FacultyProgram>());
        teacher2.setUser(user5);
        teacher2.setTeacherApprovals(new ArrayList<TeacherApproval>());
        teacher2.setEntranceQualification(entranceQualification4);
        teacher2.setPanDocument("Pan Document");
        teacher2.setTeacherTransfers(new ArrayList<TeacherTransfer>());
        teacher2.setBookPublications(new ArrayList<BookPublication>());
        teacher2.setResearchPublications(new ArrayList<ResearchPublication>());
        teacher2.setTeacherId(123L);
        teacher2.setPaperPresentedList(new ArrayList<PaperPresented>());
        teacher2.setAadharDocument("Aadhar Document");
        teacher2.setTeacherAppointments(new ArrayList<TeacherAppointment>());
        teacher2.setUgQualification(ugQualification4);
        teacher2.setPanNumber("42");
        teacher2.setAadharNumber("42");
        teacher2.setFacultySeminars(new ArrayList<FacultySeminar>());
        teacher2.setPgQualification(pgQualification4);
        User user6 = new User();
        user6.setLastName("Doe");
        user6.setEmail("jane.doe@example.org");
        user6.setPassword("password");
        user6.setHod(new Hod());
        user6.setRole(new Role());
        user6.setUserId(123L);
        LocalDateTime atStartOfDayResult36 = LocalDate.of(1970, 1, 1).atStartOfDay();
        user6.setCreatedAt(Date.from(atStartOfDayResult36.atZone(ZoneId.of("UTC")).toInstant()));
        user6.setMiddleName("Middle Name");
        user6.setFirstName("Jane");
        LocalDateTime atStartOfDayResult37 = LocalDate.of(1970, 1, 1).atStartOfDay();
        user6.setDob(Date.from(atStartOfDayResult37.atZone(ZoneId.of("UTC")).toInstant()));
        user6.setTeacher(new Teacher());
        user6.setGender("Gender");
        user6.setStudent(new Student());
        user6.setPhone("4105551212");
        Program program1 = new Program();
        program1.setProgramCode("Program Code");
        program1.setProgramName("Program Name");
        program1.setCourses(new ArrayList<Course>());
        program1.setProgramId(123L);
        program1.setStartYear("Start Year");
        program1.setAdmittedStudents(new ArrayList<AdmittedStudent>());
        program1.setDepartment(new Department());
        program1.setProgramType("Program Type");
        Student student2 = new Student();
        student2.setFatherName("Father Name");
        student2.setReligion("Religion");
        student2.setUser(user6);
        student2.setPanDocument("Pan Document");
        student2.setTenthMarks(10.0);
        student2.setTwelthMarks(10.0);
        student2.setStudentId(123L);
        student2.setMotherName("Mother Name");
        student2.setFatherPhoneNumber("4105551212");
        LocalDateTime atStartOfDayResult38 = LocalDate.of(1970, 1, 1).atStartOfDay();
        student2.setStartDate(Date.from(atStartOfDayResult38.atZone(ZoneId.of("UTC")).toInstant()));
        student2.setProgram(program1);
        student2.setAadharDocument("Aadhar Document");
        student2.setPanNumber("42");
        student2.setAadharNumber("42");
        LocalDateTime atStartOfDayResult39 = LocalDate.of(1970, 1, 1).atStartOfDay();
        student2.setCompletionDate(Date.from(atStartOfDayResult39.atZone(ZoneId.of("UTC")).toInstant()));
        student2.setMotherPhoneNumber("4105551212");
        student2.setCast("Cast");
        User user7 = new User();
        user7.setLastName("Doe");
        user7.setEmail("jane.doe@example.org");
        user7.setPassword("password");
        user7.setHod(hod2);
        user7.setRole(role3);
        user7.setUserId(123L);
        LocalDateTime atStartOfDayResult40 = LocalDate.of(1970, 1, 1).atStartOfDay();
        user7.setCreatedAt(Date.from(atStartOfDayResult40.atZone(ZoneId.of("UTC")).toInstant()));
        user7.setMiddleName("Middle Name");
        user7.setFirstName("Jane");
        LocalDateTime atStartOfDayResult41 = LocalDate.of(1970, 1, 1).atStartOfDay();
        user7.setDob(Date.from(atStartOfDayResult41.atZone(ZoneId.of("UTC")).toInstant()));
        user7.setTeacher(teacher2);
        user7.setGender("Gender");
        user7.setStudent(student2);
        user7.setPhone("4105551212");
        Department department = new Department();
        department.setId(123L);
        department.setDepartmentName("Department Name");
        department.setPrograms(new ArrayList<Program>());
        department.setEstablishmentYear("Establishment Year");
        Program program2 = new Program();
        program2.setProgramCode("Program Code");
        program2.setProgramName("Program Name");
        program2.setCourses(new ArrayList<Course>());
        program2.setProgramId(123L);
        program2.setStartYear("Start Year");
        program2.setAdmittedStudents(new ArrayList<AdmittedStudent>());
        program2.setDepartment(department);
        program2.setProgramType("Program Type");
        Student student3 = new Student();
        student3.setFatherName("Father Name");
        student3.setReligion("Religion");
        student3.setUser(user7);
        student3.setPanDocument("Pan Document");
        student3.setTenthMarks(10.0);
        student3.setTwelthMarks(10.0);
        student3.setStudentId(123L);
        student3.setMotherName("Mother Name");
        student3.setFatherPhoneNumber("4105551212");
        LocalDateTime atStartOfDayResult42 = LocalDate.of(1970, 1, 1).atStartOfDay();
        student3.setStartDate(Date.from(atStartOfDayResult42.atZone(ZoneId.of("UTC")).toInstant()));
        student3.setProgram(program2);
        student3.setAadharDocument("Aadhar Document");
        student3.setPanNumber("42");
        student3.setAadharNumber("42");
        LocalDateTime atStartOfDayResult43 = LocalDate.of(1970, 1, 1).atStartOfDay();
        student3.setCompletionDate(Date.from(atStartOfDayResult43.atZone(ZoneId.of("UTC")).toInstant()));
        student3.setMotherPhoneNumber("4105551212");
        student3.setCast("Cast");
        actualUser.setStudent(student3);
        ResearchQualification researchQualification5 = new ResearchQualification();
        researchQualification5.setSubject("Hello from the Dreaming Spires");
        researchQualification5.setUniversity("University");
        researchQualification5.setId(123L);
        researchQualification5.setDegree("Degree");
        LocalDateTime atStartOfDayResult44 = LocalDate.of(1970, 1, 1).atStartOfDay();
        researchQualification5.setDateOfDeclaration(Date.from(atStartOfDayResult44.atZone(ZoneId.of("UTC")).toInstant()));
        ResearchQualification researchQualification6 = new ResearchQualification();
        researchQualification6.setSubject("Hello from the Dreaming Spires");
        researchQualification6.setUniversity("University");
        researchQualification6.setId(123L);
        researchQualification6.setDegree("Degree");
        LocalDateTime atStartOfDayResult45 = LocalDate.of(1970, 1, 1).atStartOfDay();
        researchQualification6.setDateOfDeclaration(Date.from(atStartOfDayResult45.atZone(ZoneId.of("UTC")).toInstant()));
        User user8 = new User();
        user8.setLastName("Doe");
        user8.setEmail("jane.doe@example.org");
        user8.setPassword("password");
        user8.setHod(new Hod());
        user8.setRole(new Role());
        user8.setUserId(123L);
        LocalDateTime atStartOfDayResult46 = LocalDate.of(1970, 1, 1).atStartOfDay();
        user8.setCreatedAt(Date.from(atStartOfDayResult46.atZone(ZoneId.of("UTC")).toInstant()));
        user8.setMiddleName("Middle Name");
        user8.setFirstName("Jane");
        LocalDateTime atStartOfDayResult47 = LocalDate.of(1970, 1, 1).atStartOfDay();
        user8.setDob(Date.from(atStartOfDayResult47.atZone(ZoneId.of("UTC")).toInstant()));
        user8.setTeacher(new Teacher());
        user8.setGender("Gender");
        user8.setStudent(new Student());
        user8.setPhone("4105551212");
        EntranceQualification entranceQualification5 = new EntranceQualification();
        entranceQualification5.setSubject("Hello from the Dreaming Spires");
        entranceQualification5.setUniversity("University");
        entranceQualification5.setId(123L);
        entranceQualification5.setName("Name");
        LocalDateTime atStartOfDayResult48 = LocalDate.of(1970, 1, 1).atStartOfDay();
        entranceQualification5.setYearOfPassing(Date.from(atStartOfDayResult48.atZone(ZoneId.of("UTC")).toInstant()));
        UGQualification ugQualification5 = new UGQualification();
        ugQualification5.setDocument("Document");
        ugQualification5.setUniversity("University");
        ugQualification5.setSpecialization("Specialization");
        ugQualification5.setId(123L);
        ugQualification5.setDegree("Degree");
        ugQualification5.setGrade("Grade");
        LocalDateTime atStartOfDayResult49 = LocalDate.of(1970, 1, 1).atStartOfDay();
        ugQualification5.setYearOfPassing(Date.from(atStartOfDayResult49.atZone(ZoneId.of("UTC")).toInstant()));
        PGQualification pgQualification5 = new PGQualification();
        pgQualification5.setDocument("Document");
        pgQualification5.setUniversity("University");
        pgQualification5.setSpecialization("Specialization");
        pgQualification5.setId(123L);
        pgQualification5.setDegree("Degree");
        pgQualification5.setGrade("Grade");
        LocalDateTime atStartOfDayResult50 = LocalDate.of(1970, 1, 1).atStartOfDay();
        pgQualification5.setYearOfPassing(Date.from(atStartOfDayResult50.atZone(ZoneId.of("UTC")).toInstant()));
        Hod hod3 = new Hod();
        hod3.setResearchQualification(researchQualification6);
        hod3.setUser(user8);
        hod3.setTeacherApprovals(new ArrayList<TeacherApproval>());
        hod3.setEntranceQualification(entranceQualification5);
        hod3.setPanDocument("Pan Document");
        hod3.setTeacherTransfers(new ArrayList<TeacherTransfer>());
        hod3.setBookPublications(new ArrayList<BookPublication>());
        hod3.setResearchPublications(new ArrayList<ResearchPublication>());
        hod3.setPaperPresentedList(new ArrayList<PaperPresented>());
        hod3.setAadharDocument("Aadhar Document");
        hod3.setTeacherAppointments(new ArrayList<TeacherAppointment>());
        hod3.setId(123L);
        hod3.setUgQualification(ugQualification5);
        hod3.setPanNumber("42");
        hod3.setAadharNumber("42");
        hod3.setPgQualification(pgQualification5);
        Role role4 = new Role();
        role4.setRoleName(RoleName.Admin);
        role4.setId(123L);
        ResearchQualification researchQualification7 = new ResearchQualification();
        researchQualification7.setSubject("Hello from the Dreaming Spires");
        researchQualification7.setUniversity("University");
        researchQualification7.setId(123L);
        researchQualification7.setDegree("Degree");
        LocalDateTime atStartOfDayResult51 = LocalDate.of(1970, 1, 1).atStartOfDay();
        researchQualification7.setDateOfDeclaration(Date.from(atStartOfDayResult51.atZone(ZoneId.of("UTC")).toInstant()));
        User user9 = new User();
        user9.setLastName("Doe");
        user9.setEmail("jane.doe@example.org");
        user9.setPassword("password");
        user9.setHod(new Hod());
        user9.setRole(new Role());
        user9.setUserId(123L);
        LocalDateTime atStartOfDayResult52 = LocalDate.of(1970, 1, 1).atStartOfDay();
        user9.setCreatedAt(Date.from(atStartOfDayResult52.atZone(ZoneId.of("UTC")).toInstant()));
        user9.setMiddleName("Middle Name");
        user9.setFirstName("Jane");
        LocalDateTime atStartOfDayResult53 = LocalDate.of(1970, 1, 1).atStartOfDay();
        user9.setDob(Date.from(atStartOfDayResult53.atZone(ZoneId.of("UTC")).toInstant()));
        user9.setTeacher(new Teacher());
        user9.setGender("Gender");
        user9.setStudent(new Student());
        user9.setPhone("4105551212");
        EntranceQualification entranceQualification6 = new EntranceQualification();
        entranceQualification6.setSubject("Hello from the Dreaming Spires");
        entranceQualification6.setUniversity("University");
        entranceQualification6.setId(123L);
        entranceQualification6.setName("Name");
        LocalDateTime atStartOfDayResult54 = LocalDate.of(1970, 1, 1).atStartOfDay();
        entranceQualification6.setYearOfPassing(Date.from(atStartOfDayResult54.atZone(ZoneId.of("UTC")).toInstant()));
        UGQualification ugQualification6 = new UGQualification();
        ugQualification6.setDocument("Document");
        ugQualification6.setUniversity("University");
        ugQualification6.setSpecialization("Specialization");
        ugQualification6.setId(123L);
        ugQualification6.setDegree("Degree");
        ugQualification6.setGrade("Grade");
        LocalDateTime atStartOfDayResult55 = LocalDate.of(1970, 1, 1).atStartOfDay();
        ugQualification6.setYearOfPassing(Date.from(atStartOfDayResult55.atZone(ZoneId.of("UTC")).toInstant()));
        PGQualification pgQualification6 = new PGQualification();
        pgQualification6.setDocument("Document");
        pgQualification6.setUniversity("University");
        pgQualification6.setSpecialization("Specialization");
        pgQualification6.setId(123L);
        pgQualification6.setDegree("Degree");
        pgQualification6.setGrade("Grade");
        LocalDateTime atStartOfDayResult56 = LocalDate.of(1970, 1, 1).atStartOfDay();
        pgQualification6.setYearOfPassing(Date.from(atStartOfDayResult56.atZone(ZoneId.of("UTC")).toInstant()));
        Teacher teacher3 = new Teacher();
        teacher3.setResearchQualification(researchQualification7);
        teacher3.setFacultyPrograms(new ArrayList<FacultyProgram>());
        teacher3.setUser(user9);
        teacher3.setTeacherApprovals(new ArrayList<TeacherApproval>());
        teacher3.setEntranceQualification(entranceQualification6);
        teacher3.setPanDocument("Pan Document");
        teacher3.setTeacherTransfers(new ArrayList<TeacherTransfer>());
        teacher3.setBookPublications(new ArrayList<BookPublication>());
        teacher3.setResearchPublications(new ArrayList<ResearchPublication>());
        teacher3.setTeacherId(123L);
        teacher3.setPaperPresentedList(new ArrayList<PaperPresented>());
        teacher3.setAadharDocument("Aadhar Document");
        teacher3.setTeacherAppointments(new ArrayList<TeacherAppointment>());
        teacher3.setUgQualification(ugQualification6);
        teacher3.setPanNumber("42");
        teacher3.setAadharNumber("42");
        teacher3.setFacultySeminars(new ArrayList<FacultySeminar>());
        teacher3.setPgQualification(pgQualification6);
        User user10 = new User();
        user10.setLastName("Doe");
        user10.setEmail("jane.doe@example.org");
        user10.setPassword("password");
        user10.setHod(new Hod());
        user10.setRole(new Role());
        user10.setUserId(123L);
        LocalDateTime atStartOfDayResult57 = LocalDate.of(1970, 1, 1).atStartOfDay();
        user10.setCreatedAt(Date.from(atStartOfDayResult57.atZone(ZoneId.of("UTC")).toInstant()));
        user10.setMiddleName("Middle Name");
        user10.setFirstName("Jane");
        LocalDateTime atStartOfDayResult58 = LocalDate.of(1970, 1, 1).atStartOfDay();
        user10.setDob(Date.from(atStartOfDayResult58.atZone(ZoneId.of("UTC")).toInstant()));
        user10.setTeacher(new Teacher());
        user10.setGender("Gender");
        user10.setStudent(new Student());
        user10.setPhone("4105551212");
        Program program3 = new Program();
        program3.setProgramCode("Program Code");
        program3.setProgramName("Program Name");
        program3.setCourses(new ArrayList<Course>());
        program3.setProgramId(123L);
        program3.setStartYear("Start Year");
        program3.setAdmittedStudents(new ArrayList<AdmittedStudent>());
        program3.setDepartment(new Department());
        program3.setProgramType("Program Type");
        Student student4 = new Student();
        student4.setFatherName("Father Name");
        student4.setReligion("Religion");
        student4.setUser(user10);
        student4.setPanDocument("Pan Document");
        student4.setTenthMarks(10.0);
        student4.setTwelthMarks(10.0);
        student4.setStudentId(123L);
        student4.setMotherName("Mother Name");
        student4.setFatherPhoneNumber("4105551212");
        LocalDateTime atStartOfDayResult59 = LocalDate.of(1970, 1, 1).atStartOfDay();
        student4.setStartDate(Date.from(atStartOfDayResult59.atZone(ZoneId.of("UTC")).toInstant()));
        student4.setProgram(program3);
        student4.setAadharDocument("Aadhar Document");
        student4.setPanNumber("42");
        student4.setAadharNumber("42");
        LocalDateTime atStartOfDayResult60 = LocalDate.of(1970, 1, 1).atStartOfDay();
        student4.setCompletionDate(Date.from(atStartOfDayResult60.atZone(ZoneId.of("UTC")).toInstant()));
        student4.setMotherPhoneNumber("4105551212");
        student4.setCast("Cast");
        User user11 = new User();
        user11.setLastName("Doe");
        user11.setEmail("jane.doe@example.org");
        user11.setPassword("password");
        user11.setHod(hod3);
        user11.setRole(role4);
        user11.setUserId(123L);
        LocalDateTime atStartOfDayResult61 = LocalDate.of(1970, 1, 1).atStartOfDay();
        user11.setCreatedAt(Date.from(atStartOfDayResult61.atZone(ZoneId.of("UTC")).toInstant()));
        user11.setMiddleName("Middle Name");
        user11.setFirstName("Jane");
        LocalDateTime atStartOfDayResult62 = LocalDate.of(1970, 1, 1).atStartOfDay();
        user11.setDob(Date.from(atStartOfDayResult62.atZone(ZoneId.of("UTC")).toInstant()));
        user11.setTeacher(teacher3);
        user11.setGender("Gender");
        user11.setStudent(student4);
        user11.setPhone("4105551212");
        EntranceQualification entranceQualification7 = new EntranceQualification();
        entranceQualification7.setSubject("Hello from the Dreaming Spires");
        entranceQualification7.setUniversity("University");
        entranceQualification7.setId(123L);
        entranceQualification7.setName("Name");
        LocalDateTime atStartOfDayResult63 = LocalDate.of(1970, 1, 1).atStartOfDay();
        entranceQualification7.setYearOfPassing(Date.from(atStartOfDayResult63.atZone(ZoneId.of("UTC")).toInstant()));
        UGQualification ugQualification7 = new UGQualification();
        ugQualification7.setDocument("Document");
        ugQualification7.setUniversity("University");
        ugQualification7.setSpecialization("Specialization");
        ugQualification7.setId(123L);
        ugQualification7.setDegree("Degree");
        ugQualification7.setGrade("Grade");
        LocalDateTime atStartOfDayResult64 = LocalDate.of(1970, 1, 1).atStartOfDay();
        ugQualification7.setYearOfPassing(Date.from(atStartOfDayResult64.atZone(ZoneId.of("UTC")).toInstant()));
        PGQualification pgQualification7 = new PGQualification();
        pgQualification7.setDocument("Document");
        pgQualification7.setUniversity("University");
        pgQualification7.setSpecialization("Specialization");
        pgQualification7.setId(123L);
        pgQualification7.setDegree("Degree");
        pgQualification7.setGrade("Grade");
        LocalDateTime atStartOfDayResult65 = LocalDate.of(1970, 1, 1).atStartOfDay();
        pgQualification7.setYearOfPassing(Date.from(atStartOfDayResult65.atZone(ZoneId.of("UTC")).toInstant()));
        Teacher teacher4 = new Teacher();
        teacher4.setResearchQualification(researchQualification5);
        teacher4.setFacultyPrograms(new ArrayList<FacultyProgram>());
        teacher4.setUser(user11);
        teacher4.setTeacherApprovals(new ArrayList<TeacherApproval>());
        teacher4.setEntranceQualification(entranceQualification7);
        teacher4.setPanDocument("Pan Document");
        teacher4.setTeacherTransfers(new ArrayList<TeacherTransfer>());
        teacher4.setBookPublications(new ArrayList<BookPublication>());
        teacher4.setResearchPublications(new ArrayList<ResearchPublication>());
        teacher4.setTeacherId(123L);
        teacher4.setPaperPresentedList(new ArrayList<PaperPresented>());
        teacher4.setAadharDocument("Aadhar Document");
        teacher4.setTeacherAppointments(new ArrayList<TeacherAppointment>());
        teacher4.setUgQualification(ugQualification7);
        teacher4.setPanNumber("42");
        teacher4.setAadharNumber("42");
        teacher4.setFacultySeminars(new ArrayList<FacultySeminar>());
        teacher4.setPgQualification(pgQualification7);
        actualUser.setTeacher(teacher4);
        actualUser.setUserId(123L);
        assertSame(fromResult, actualUser.getCreatedAt());
        assertSame(fromResult1, actualUser.getDob());
        assertEquals("jane.doe@example.org", actualUser.getEmail());
        assertEquals("Jane", actualUser.getFirstName());
        assertEquals("Gender", actualUser.getGender());
        assertSame(hod1, actualUser.getHod());
        assertEquals("Doe", actualUser.getLastName());
        assertEquals("Middle Name", actualUser.getMiddleName());
        assertEquals("password", actualUser.getPassword());
        assertEquals("4105551212", actualUser.getPhone());
        assertSame(role2, actualUser.getRole());
        assertSame(student3, actualUser.getStudent());
        assertSame(teacher4, actualUser.getTeacher());
        assertEquals(123L, actualUser.getUserId().longValue());
    }
}

